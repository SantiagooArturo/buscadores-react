{"version":3,"sources":["components/imagen/Image.js","components/Cards/Cards.js","components/Home/Home.js","components/image/card.js","components/RickAndMorty/Rickandmorty.js","App.js","reportWebVitals.js","index.js"],"names":["Image","props","withReactContent","Swal","useState","apidata","setApiData","useEffect","data","Card","style","width","Img","variant","src","previewURL","height","Body","Title","tags","Text","className","onClick","reciveData","largeImageURL","user","Cards","newData","setnewData","dataModal","console","log","map","idx","Home","response","setResponse","query","setQuery","showLoading","setShowLoading","page","setPage","show","setShow","URL","type","pagesOrder","queryString","window","location","search","urlParams","URLSearchParams","localPage","get","localQuery","path","fetch","then","resp","json","hits","finally","action","paddingLeft","paddingRight","paddingTop","paddingBottom","background","borderRadius","placeholder","onChange","e","resultSearch","target","value","fire","title","text","imageUrl","imageWidth","imageHeight","imageAlt","textAlign","marginTop","pageStart","history","push","dataArray","setdataArray","image","name","Rickandmorty","respSearch","setrespSearch","res","results","reciveSearch","key","App","Navbar","bg","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","to","NavDropdown","Item","Divider","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e007479.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport ViewImage from '../ViewImage/ViewImage';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\n\r\n\r\n\r\n\r\nfunction Image(props) {\r\n  const MySwal = withReactContent(Swal);\r\n  const [apidata, setApiData] = useState([]);\r\n  const [showModal, setSowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setApiData(props.data);\r\n  }, []);\r\n\r\n  const sendData = () => {\r\n    props.reciveData(apidata.largeImageURL, apidata.tags, apidata.user);\r\n  }\r\n\r\n\r\n\r\n  return(\r\n    <div>\r\n            <Card style={{ width: '18rem' }}>\r\n              <Card.Img variant=\"top\" src={apidata.previewURL} height=\"160\" />\r\n              <Card.Body>\r\n                <Card.Title>{apidata.tags}</Card.Title>\r\n                <Card.Text>\r\n                  Some quick example text to build on the card title and make up the bulk of\r\n                  the card's content.\r\n            </Card.Text>\r\n              <button className=\"btn btn-outline-primary\" onClick={() => sendData()}>Ver</button>\r\n\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n  )\r\n}\r\n\r\nexport default Image;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { Card, ResponsiveEmbed } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport Image from '../imagen/Image';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\r\n\r\nfunction Cards(props) {\r\n  const [newData, setnewData] = useState([]);\r\n  const [dataModal, setdataModal] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(props.data);\r\n    setnewData(props.data);\r\n\r\n  }, [props.data])\r\n\r\n  console.log(props)\r\n\r\n  return(\r\n    <div className=\"row pt-4\">\r\n      {newData.map((data, idx) => {\r\n        const sendData = () => {\r\n          props.dataModal(data.largeImageURL, data.tags, data.user);\r\n        }\r\n        return (\r\n          <div key={idx} className=\"col-4 col-sm-4 col-md-4\">\r\n            <Image data={data} reciveData={dataModal} ></Image>\r\n          </div>\r\n        )\r\n      })}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cards;\r\n","import { useEffect, useState } from 'react';\r\nimport { Card, ResponsiveEmbed } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\r\nimport Cards from '../Cards/Cards';\r\n\r\n\r\nfunction Home(props) {\r\n\r\n  const MySwal = withReactContent(Swal);\r\n  const [response, setResponse] = useState([]);\r\n  const [query, setQuery] = useState(\"yellow+flowers\");\r\n  const [showLoading, setShowLoading] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const [show, setShow] = useState(false);\r\n  const [pageState, setpageState] = useState(false);\r\n\r\n\r\n  const URL = 'https://pixabay.com/api/?key=21623786-bd1fb2c17a5396dac81a786ec&q=';\r\n  const type = '&image_type=photo&pretty=true';\r\n  const pagesOrder = '&page=';\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    var queryString = window.location.search;\r\n    var urlParams = new URLSearchParams(queryString);\r\n    var localPage = urlParams.get('page');\r\n    var localQuery = urlParams.get('data')\r\n    console.log(page);\r\n    console.log(query);\r\n    let path = \"\";\r\n\r\n\r\n    if (localPage != null && localQuery != null) {\r\n      setPage(localPage);\r\n      setQuery(localQuery);\r\n      path = URL + localQuery + type + pagesOrder + localPage;\r\n      setShow(true);\r\n\r\n    }else{\r\n      path = URL + query + type + pagesOrder + page;\r\n\r\n    }\r\n\r\n    fetch(path)\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        setResponse(data.hits)\r\n      })\r\n      .finally(() => {\r\n        setShowLoading(false);\r\n      })\r\n  }, []);\r\n\r\n  console.log(props);\r\n\r\n  const resultSearch = (e) => {\r\n    console.log(e);\r\n    setQuery(e);\r\n\r\n  }\r\n\r\n  const searchImage = () => {\r\n    setPage(1)\r\n    setResponse([]);\r\n\r\n    fetch(URL + query + type + pagesOrder + '1')\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        setResponse(data.hits)\r\n      })\r\n      .finally(() => {\r\n        setShowLoading(false);\r\n      })\r\n  }\r\n\r\n  const showModal = (data, tags, user) => {\r\n    Swal.fire({\r\n      title: 'Tags:' + tags,\r\n      text: 'User:' + user,\r\n      imageUrl: data,\r\n      imageWidth: 400,\r\n      imageHeight: 200,\r\n      imageAlt: 'Custom image',\r\n    })\r\n\r\n  }\r\n\r\n  const nextPage = () => {\r\n    let pageStart = page;\r\n    pageStart++;\r\n    setPage(pageStart);\r\n\r\n    setResponse([]);\r\n    fetch(URL + query + type + pagesOrder + pageStart)\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n        setResponse(data.hits);\r\n      })\r\n\r\n      props.history.push({search: \"?page=\" + pageStart + \"&data=\" + query})\r\n      console.log(props.history);\r\n    setShow(true);\r\n  }\r\n\r\n  const previusPage = () => {\r\n    let pageStart = page;\r\n    pageStart--;\r\n    setPage(pageStart)\r\n\r\n    setResponse([]);\r\n    fetch(URL + query + type + pagesOrder + pageStart)\r\n      .then(resp => resp.json())\r\n      .then(data => {\r\n\r\n        setResponse(data.hits)\r\n\r\n      })\r\n\r\n    props.history.push({ search: \"?page=\" + pageStart })\r\n\r\n    if (pageStart == 1) {\r\n      setShow(false);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n      <form action=\"#\">\r\n\r\n        <div className=\"container\" >\r\n          <div className=\"row pt-4\" style={{ paddingLeft: \"10px\", paddingRight: \"10px\", paddingTop: \"55px\", paddingBottom: \"20px\", background: \"skyblue\", borderRadius: \"10px\" }}>\r\n            <div className=\"col-md-9\">\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"Buscar...\" onChange={(e) => resultSearch(e.target.value)} />\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <button className=\"btn btn-outline-dark\" type=\"submit\" onClick={searchImage}>Buscar</button>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n          {showLoading &&\r\n            < div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <div className=\"lds-dual-ring\"></div>\r\n              </div>\r\n            </div>\r\n          }\r\n\r\n          <Cards data={response} dataModal={showModal}></Cards>\r\n\r\n          <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n            {show &&\r\n              <button className=\"btn btn-danger\" type=\"button\" onClick={previusPage}>Anterior</button>\r\n            }\r\n            <button>{page}</button>\r\n\r\n            <button className=\"btn btn-danger\" type=\"button\" onClick={nextPage}>Siguiente</button>\r\n\r\n          </div>\r\n        </div >\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","import { React, useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Card} from 'react-bootstrap';\r\n\r\nfunction Image(props) {\r\n\r\n  const [dataArray, setdataArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setdataArray(props.data);\r\n  }, []);\r\n\r\n  return(\r\n    <div>\r\n      <Card style={{ width: '18rem' }}>\r\n        <Card.Img variant=\"top\" src={dataArray.image} />\r\n        <Card.Body>\r\n          <Card.Title>{dataArray.name}</Card.Title>\r\n          <Card.Text>\r\n            Some quick example text to build on the card title and make up the bulk of\r\n            the card's content.\r\n          </Card.Text>\r\n          <button className={\"btn btn-outline-primary\"}>Ver</button>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Image;","import { React, useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Image from '../image/card';\r\n\r\nfunction Rickandmorty(props) {\r\n\r\n  const URL = 'https://rickandmortyapi.com/api/character/';\r\n  const [response, setResponse] = useState([]);\r\n  const [statePeticion, setstatePeticion] = useState(false);\r\n  const [respSearch, setrespSearch] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n\r\n    fetch(URL)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setResponse(data.results);\r\n\r\n      })\r\n   props.history.push({ search:\"&data=\" + respSearch })\r\n\r\n  }, [])\r\n\r\n  const reciveSearch = (e) => {\r\n    console.log(e);\r\n    setrespSearch(e);\r\n\r\n\r\n  }\r\n\r\n  const searching = () => {\r\n    console.log(respSearch);\r\n\r\n\r\n    fetch(URL + respSearch)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        //en el console.log se ve que la data que busco llega\r\n        setResponse([]);\r\n        //console.log(response);\r\n        //console.log(data);\r\n        setResponse([data]);\r\n\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={{ marginTop: '30px' }} >\r\n      <div className=\"row pt-4\" style={{ paddingLeft: \"10px\", paddingRight: \"10px\", paddingTop: \"20px\", paddingBottom: \"20px\", background: \"skyblue\", borderRadius: \"10px\" }}>\r\n        <div className=\"col-md-9\">\r\n          <input type=\"text\" className=\"form-control\" placeholder=\"Buscar...\" onChange={e => reciveSearch(e.target.value)} />\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <button className=\"btn btn-outline-dark\" onClick={() => searching()}>Buscar</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row pt-4\">\r\n        {response.map((data, key) => {\r\n          //console.log(data);\r\n          return (\r\n            <div key={key} className=\"col-4 col-sm-4 col-md-4\">\r\n              <Image data={data} ></Image>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Rickandmorty;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { Card, ResponsiveEmbed, Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { BrowserRouter, Route, Switch, Link, Redirect } from 'react-router-dom';\nimport Home from './components/Home/Home';\nimport Notfound from './components/NotFound/Notfound';\nimport Rickandmorty from './components/RickAndMorty/Rickandmorty';\n\nfunction App() {\n\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand href=\"#home\">Buscador</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n\n              <Nav.Link href=\"#home\">Pixabay</Nav.Link>\n\n              <Nav.Link to=\"/rickandmorty\">Rick and Morty</Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/buscador\" component={Home}></Route>\n          <Route exact path=\"/\">\n            <Redirect to=\"/buscador?page=1&data=yellow+flowers\"></Redirect>\n          </Route>\n          {/* <Route component={Notfound}></Route> */}\n          <Route exact path=\"/rickandmorty\" component={Rickandmorty}></Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}